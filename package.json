{
  "name": "foundation-ts-monorepo",
  "version": "1.0.0",
  "description": "A TypeScript monorepo template with strict configurations and testing setup",
  "private": true,
  "engines": {
    "node": ">=20.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@10.15.0",
  "scripts": {
    "build": "npm run build --workspaces",
    "test": "npm run test --workspaces",
    "lint": "npm run lint --workspaces",
    "analyze": "npm run analyze --workspaces",
    "clean": "npm run clean --workspaces",
    "dev": "npm run dev --workspaces",
    "dev:setup": "./scripts/dev-setup.sh",
    "dev:start": "docker-compose up -d",
    "dev:stop": "docker-compose down",
    "dev:restart": "docker-compose restart",
    "dev:logs": "docker-compose logs -f",
    "dev:clean": "docker-compose down -v --remove-orphans",
    "dev:full": "docker-compose --profile full-stack up -d",
    "services:build": "docker-compose build",
    "services:user": "docker-compose up -d user-service",
    "db:up": "docker-compose up -d postgres redis",
    "monitoring:up": "docker-compose up -d prometheus grafana",
    "analyze:security": "npm run analyze --workspace=@foundation/analyzer",
    "check:health": "curl -f http://localhost:3001/health && curl -f http://localhost:9090/-/healthy && curl -f http://localhost:3000/api/health",
    "start": "npm run start:user-service",
    "start:user-service": "cd services/user-service && npm run start",
    "start:user-service:dev": "cd services/user-service && npm run dev",
    "start:user-service:build": "cd services/user-service && npm run build && npm run start",
    "help": "echo '\nðŸš€ Available Commands:\n  npm run build              - Build all packages\n  npm run start              - Start user service\n  npm run start:user-service - Start user service (production)\n  npm run start:user-service:dev - Start user service (development)\n  npm run dev:setup          - Setup development environment\n  npm run dev:start          - Start all services with Docker\n  npm run check:health       - Check all service health endpoints\n'"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/cors": "^2.8.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.0",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.0.0",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.0"
  },
  "pnpm": {
    "overrides": {
      "@opentelemetry/api": "^1.8.0"
    }
  },
  "dependencies": {
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.52.0",
    "@opentelemetry/sdk-node": "^0.52.0",
    "bcrypt": "^5.1.0",
    "cors": "^2.8.0",
    "express": "^4.18.0",
    "helmet": "^7.0.0",
    "jsonwebtoken": "^9.0.0",
    "pg": "^8.11.0",
    "prom-client": "^15.0.0",
    "redis": "^4.6.0",
    "tslib": "^2.8.1"
  },
  "workspaces": [
    "packages/*",
    "services/*"
  ]
}
