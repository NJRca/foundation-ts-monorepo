{
  "name": "foundation-ts-monorepo",
  "version": "1.0.0",
  "description": "A TypeScript monorepo template with strict configurations and testing setup",
  "private": true,
  "engines": {
    "node": ">=20.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@10.15.0",
  "scripts": {
    "build": "tsc -b tsconfig.build.json",
    "build:watch": "npm run build --workspaces -- --watch",
    "build:clean": "npm run clean && npm run build",
    "typecheck": "tsc --noEmit --project tsconfig.json",
    "test": "npm run test --workspaces",
    "test:watch": "npm run test --workspaces -- --watch",
    "test:coverage": "npm run test --workspaces -- --coverage",
    "test:ci": "npm run test --workspaces -- --ci --coverage --watchAll=false",
    "test:acceptance": "cd tests/acceptance && npm test",
    "test:acceptance:watch": "cd tests/acceptance && npm run test:watch",
    "test:acceptance:ci": "cd tests/acceptance && npm run test:ci",
    "lint": "npm run lint --workspaces",
    "lint:fix": "npm run lint --workspaces -- --fix",
    "lint:check": "npm run lint",
    "format": "prettier --write \"**/*.{ts,js,json,md,yml,yaml}\"",
    "format:check": "prettier --check \"**/*.{ts,js,json,md,yml,yaml}\"",
    "analyze": "npm run build && npm run analyze:sarif",
    "analyze:sarif": "node packages/analyzer/dist/cli.js .",
    "analyze:examples": "node packages/analyzer/dist/cli.js examples",
    "clean": "npm run clean --workspaces",
    "clean:all": "find packages -name dist -prune -exec rm -rf {} + && find services -name dist -prune -exec rm -rf {} + && find packages -name tsconfig.tsbuildinfo -delete && find services -name tsconfig.tsbuildinfo -delete",
    "dev": "npm run dev --workspaces",
    "dev:setup": "./scripts/dev-setup.sh",
    "dev:start": "docker-compose up -d",
    "dev:stop": "docker-compose down",
    "dev:restart": "docker-compose restart",
    "dev:logs": "docker-compose logs -f",
    "dev:clean": "docker-compose down -v --remove-orphans",
    "dev:full": "docker-compose --profile full-stack up -d",
    "services:build": "docker-compose build",
    "services:user": "docker-compose up -d user-service",
    "db:up": "docker-compose up -d postgres redis",
    "db:migrate": "node sql/migrate.js",
    "db:migrate:status": "node sql/migrate.js status",
    "db:reset": "docker-compose down -v postgres && docker-compose up -d postgres && npm run db:migrate",
    "monitoring:up": "docker-compose up -d prometheus grafana",
    "analyze:security": "npm run analyze --workspace=@foundation/analyzer",
    "check:health": "curl -f http://localhost:3001/health && curl -f http://localhost:9090/-/healthy && curl -f http://localhost:3000/api/health",
    "config:check": "node scripts/config-check.js",
    "config:validate": "npm run config:check",
    "start": "npm run start:user-service",
    "start:user-service": "cd services/user-service && npm run start",
    "start:user-service:dev": "cd services/user-service && npm run dev",
    "start:user-service:build": "cd services/user-service && npm run build && npm run start",
    "deps:check": "npm audit && npm outdated",
    "deps:update": "npm update --workspaces",
    "deps:install": "npm install --workspaces",
    "workspace:list": "npm ls --workspaces --depth=0",
    "workspace:graph": "echo 'Workspace dependency graph:' && npm ls --workspaces",
    "ci:local": "npm run lint && npm run test:ci && npm run build",
    "ci:validate": "npm run format:check && npm run lint:check && npm run test:ci",
    "ci:reality-check": "./scripts/validate-ci-reality-check.sh",
    "quick-start": "npm run build && npm run start",
    "full-setup": "npm install && npm run build && npm run dev:setup",
    "validate:workspace": "./scripts/validate-workspace.sh",
    "validate:gaps": "./scripts/gap-analysis.sh",
    "help": "echo '\nüöÄ Foundation Monorepo Commands:\n\nüì¶ Build & Development:\n  npm run build              - Build all packages\n  npm run build:watch        - Build with watch mode\n  npm run dev                - Start development mode\n  npm run quick-start        - Build and start services\n\nüß™ Testing:\n  npm run test               - Run all tests\n  npm run test:watch         - Run tests in watch mode\n  npm run test:coverage      - Run tests with coverage\n\nüîç Code Quality:\n  npm run lint               - Lint all code\n  npm run lint:fix           - Auto-fix lint issues\n  npm run format             - Format all code\n  npm run format:check       - Check code formatting\n\nüöÄ Services:\n  npm run start              - Start user service\n  npm run start:user-service:dev - Start in development mode\n\nüê≥ Docker:\n  npm run dev:start          - Start all services with Docker\n  npm run dev:setup          - Setup development environment\n\n\uddc4Ô∏è Database:\n  npm run db:migrate         - Run database migrations\n  npm run db:migrate:status  - Show migration status\n  npm run db:reset           - Reset database and run migrations\n\nüìä Utilities:\n  npm run deps:check         - Check dependencies\n  npm run workspace:list     - List all workspaces\n  npm run ci:local           - Run CI pipeline locally\n  npm run help               - Show this help\n'"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/cors": "^2.8.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.0"
  },
  "pnpm": {
    "overrides": {
      "@opentelemetry/api": "^1.8.0"
    }
  },
  "dependencies": {
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.52.0",
    "@opentelemetry/sdk-node": "^0.52.0",
    "bcrypt": "^5.1.0",
    "cors": "^2.8.0",
    "express": "^4.18.0",
    "helmet": "^7.0.0",
    "jsonwebtoken": "^9.0.0",
    "openai": "^5.15.0",
    "pg": "^8.11.0",
    "prom-client": "^15.0.0",
    "redis": "^4.6.0",
    "tslib": "^2.8.1"
  },
  "workspaces": [
    "packages/*",
    "services/*",
    "extensions/*",
    "tests/acceptance"
  ]
}
